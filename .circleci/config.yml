version: 2.1

executors:
  python:
    docker:
      - image: circleci/python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

jobs:

  lint:
    executor: python
    steps:
      - checkout
      - run:
          name: Install dependencies and Lint app
          command: |
            sudo apt-get update
            sudo apt-get install python3-venv
            python3 -m venv ~/.capstone
            source ~/.capstone/bin/activate
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 && sudo chmod +x /bin/hadolint
            make install
            make lint
            
  build:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Build, tag and push docker image to docker.io
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PWD}
            docker build -t zypher9/capstone:${CIRCLE_WORKFLOW_ID:0:7} .
            docker push zypher9/capstone:${CIRCLE_WORKFLOW_ID:0:7}
            docker tag zypher9/capstone:${CIRCLE_WORKFLOW_ID:0:7} zypher9/capstone:latest
            docker push zypher9/capstone:latest
  
  create-small-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstone
        type: string
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
            echo "eksctl is already installed"
            exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
            SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ''
  
  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstone
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deploy.yml
          resource-name: deployment/capstone

  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstone
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Test cluster
          command: |
            kubectl get nodes
            kubectl get deployment
            
  delay:
    executor: aws-eks/python3
    steps:
      - run:
          command: |
            sleep 540
          name: Delay cluster deletion
                      
orbs:
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.12.0

workflows:
  
  deployment:
    jobs:
      - lint
      - build:
          requires:
            - lint
            
      - create-small-cluster:
          cluster-name: capstone
      - delay:
          requires:
            - create-small-cluster

      - create-deployment:
          cluster-name: capstone
          requires:
            - aws-eks/create-cluster

      - aws-eks/update-container-image:
          cluster-name: capstone
          container-image-updates: capstone=zypher9/capstone
          post-steps:
              - kubernetes/delete-resource:
                  resource-names: capstone
                  resource-types: deployment
                  wait: true
          record: true
          requires:
              - create-deployment
          resource-name: deployment/capstone

      - test-cluster:
          cluster-name: capstone
          requires:
            - aws-eks/update-container-image
            
      - aws-eks/delete-cluster:
          cluster-name: capstone
          requires:
            - test-cluster
